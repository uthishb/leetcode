class Solution {
    public String getBinary(int num) {
        StringBuilder sb = new StringBuilder();
        while(num > 0) {
            sb.append(num%2);
            num = num/2;
        }    
        return sb.reverse().toString();
    }
    
    public boolean isPrime(int num) {
        if(num == 1)
            return false;
        for(int i=2;i<=Math.sqrt(num);i++) {
            if(num%i==0)
                return false;
        }
        return true;
    }
    
    public int countPrimeSetBits(int L, int R) {
        int numOfNumsWithPRimeOneBits = 0;
        for(int i=L;i<=R;i++) {
            String binary = getBinary(i);
            int oneCount = 0;
            for(int j=0;j<binary.length();j++) {
                if(binary.charAt(j) == '1')
                    oneCount++;
            }
            if(isPrime(oneCount))
              numOfNumsWithPRimeOneBits++;  
        }
        return numOfNumsWithPRimeOneBits;
    }
}